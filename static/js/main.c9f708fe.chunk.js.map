{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","Home","role","tabIndex","placeholder","Find","onClick","toggleMode","htmlFor","Textarea","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","con","toUpperCase","toLowerCase","charAt","slice","words","split","i","length","substr","document","getElementById","select","navigator","clipboard","writeText","ext","join","protoTypes","PropTypes","string","isRequired","defaultProps","Alert","alert","App","setmode","port","process","listen","console","log","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9f708fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.Navbar}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.Home}</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">Link</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\"\r\n                role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">tyt5yt5ht5</a></li>\r\n                <li><hr className=\"dropdown-divider\" /></li>\r\n                <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">{props.Find}</button>\r\n          </form>\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'Dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Mode</label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.protoTypes = {\r\n  Navbar: PropTypes.string.isRequired,\r\n  Find: PropTypes.string.isRequired,\r\n  Home: PropTypes.string\r\n};\r\nNavbar.defaultProps = {\r\n  Navbar: 'set title',\r\n  Find: 'button',\r\n  Home: 'Set Home'\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const handleupclick = ()=>{\r\n        let con=text.toUpperCase()\r\n        setText(con)\r\n    }\r\n\r\n    const handledownclick = ()=>{\r\n        let con=text.toLowerCase()\r\n        setText(con)\r\n    }\r\n    const handleclearclick =()=>{\r\n        let con=\"\"\r\n        setText(con)\r\n    }\r\n    const handlefirclick =()=>{\r\n        let te=text.charAt(0)\r\n        let con=te.toUpperCase()\r\n        setText(con + text.slice(1))\r\n    }\r\n    \r\n    const handlecapclick =()=>{\r\n        const words=text.split(\" \");\r\n        for (let i = 0; i < words.length; i++) {\r\n            words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n        }              \r\n    }\r\n\r\n//     function uppercase(text)\r\n// {\r\n//   var array1 = text.split(' ');\r\n//   var newarray1 = [];\r\n    \r\n//   for(var x = 0; x < array1.length; x++){\r\n//       newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));\r\n//   }\r\n//   return newarray1.join(' ');\r\n// }\r\n// console.log(uppercase(\"the quick brown fox\"));\r\n    \r\n    const handleextspace = ()=>{\r\n        let ext=text.split(/[ ]+/);\r\n        setText(ext.join(\" \"))\r\n    }\r\n    \r\nconst handlecopy = ()=>{\r\n    const text=document.getElementById('mybox');        \r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n}\r\nconst handleonchange =(event)=>{\r\n    setText(event.target.value)\r\n}\r\nconst [text,setText] = useState('');\r\nreturn (\r\n    <div style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <div>\r\n            <div className=\"container mb-3 \">\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode ==='dark'?'#0d2d4c':'white',color: props.mode ==='dark'?'white':'black'}} onChange={handleonchange} id=\"mybox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={handleupclick}>convert to uppercase</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handledownclick}>convert to lowercase</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handleclearclick}>clear</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handlefirclick}>Manage</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handlecapclick}>Capitalize</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handlecopy}>Copy</button>\r\n\r\n            <button className='btn btn-primary mx-4' onClick={handleextspace}>extra space</button>\r\n        </div>\r\n        <div className=\"container\" >\r\n            <h2 >your text summary</h2>\r\n            <p>total text is {text.split(\" \").length} and character is{text.length}</p>\r\n            <p>you can read this massage in {.08 * text.split(\" \").length} sec</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"enter your text to preview it here\"}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                <strong>{props.alert}</strong>\r\n                {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport './App.css';\n\nimport Alert from './components/Alert';\n// import About from './components/About';\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const port = process.env.port || 8000;\n\n  const showalert =(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n  }\n\n  const toggleMode=()=>{\n    if (mode ==='light') {\n      setmode('dark')\n      document.body.style.backgroundColor ='#0d2d4c'\n    } else {\n      setmode('light')\n      document.body.style.backgroundColor ='white'\n\n    }\n  }\n  App.listen(port,() =>{\n    console.log(`listening to th port no at ${port}`);\n  })\n  return (\n    <>\n      <Navbar Navbar=\"Cool\" Find=\"Searching\" mode={mode} toggleMode={toggleMode} />\n      <Alert/>\n      <div className='container my-5' >\n        <Textarea heading=\"Enter text something\" mode={mode}/>\n        {/* <About /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}